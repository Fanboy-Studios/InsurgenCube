// CubeScript placed in this file is automatically executed on each startup.

// editent command
// Note: The editent command can NOT define rotation/yaw inside the command!
//	   ... however, the current yaw of the player will define the rotation/yaw when using the command!
alias editent [
	alias enttype (getenttype)
	if (strcmp $enttype "mapmodel")  [
		saycommand "/entset" $enttype (getentattr 1) (getentattr 2) (getentattr 3)
		][
		if (> (findlist "light sound clip plclip" $enttype) -1) [
			saycommand "/entset" $enttype (getentattr 0) (getentattr 1) (getentattr 2) (getentattr 3)
			][
			saycommand "/entset" $enttype (getentattr ((> (findlist "playerstart ctf-flag" $enttype) -1)))
			]
		]
	]

// "convertclips" command:
// This command automatically changes the a "clip" to a "plclip" entity or vice-versa. 
alias convertclips [ 
	if (strcmp (getenttype) "clip") [
		entset plclip (getentattr 0) (getentattr 1) (getentattr 2) (getentattr 3)
	] [
	if (strcmp (getenttype) "plclip") [
		entset clip (getentattr 0) (getentattr 1) (getentattr 2) (getentattr 3)
	] [
		echo "No changes made. This entity isn't a clip or a plclip."
		echo "Try using the /closestenttype command to find a specific entity."
	] ] ]

alias fullscreenscript [ if (= $fullscreen 1)[ fullscreen 0 ] [ fullscreen 1 ] ]

alias editmapmsg [ saycommand ( concatword [/mapmsg ] ["] (getmapmsg) ["] ) ]

// Auto-completions
alias mapcomplete [complete $arg1 "packages/maps/official packages/maps" cgz]
mapcommands = "map tdm coop dm lms ts ctf pf lss osok tosok htf vip tktf ktf rtdm etdm rdm edm knife handheld rctf cdm ctdm ktf2 tktf2 zombie zombies"
loop i (listlen $mapcommands) [
	mapcomplete (at $mapcommands $i)
]

complete demo "demos" dmo

alias entcomplete [listcomplete $arg1 "light playerstart pistol ammobox grenades health armor akimbo mapmodel ladder ctf-flag sound clip"]
entcomplete newent
entcomplete clearents
entcomplete closestenttype

// "resetbinds" command.
alias resetbinds [ exec config/resetbinds.cfg; echo "3All binds have been reset to default values!" ]

// "changeteam" command.
alias changeteam [
	if (= (curteam) 1) [ team RED ] [ team BLUE ]
	if (= (curteam) 0) [ echo "You are now on team 3RED" ] [ echo "You are now on team 1BLUE" ]
]

// Mode/map-setting aliases.
alias votemap [ mode $arg1; map $arg2 ]

alias tdm		[ votemap 0 $arg1 ]
alias coop		[ votemap 1 $arg1 ]
alias dm		[ votemap 2 $arg1 ]
alias lms		[ votemap 3 $arg1 ]
alias ts		[ votemap 4 $arg1 ]
alias ctf		[ votemap 5 $arg1 ]
alias pf		[ votemap 6 $arg1 ]
alias lss		[ votemap 7 $arg1 ]
alias osok		[ votemap 8 $arg1 ]
alias tosok		[ votemap 9 $arg1 ]
alias htf		[ votemap 10 $arg1 ]
alias vip		[ votemap 10 $arg1 ]
alias tktf		[ votemap 11 $arg1 ]
alias ktf		[ votemap 12 $arg1 ]
alias rtdm		[ votemap 13 $arg1 ]
alias etdm		[ votemap 14 $arg1 ]
alias rdm		[ votemap 15 $arg1 ]
alias edm		[ votemap 16 $arg1 ]
alias knife		[ votemap 17 $arg1 ]
alias handheld	[ votemap 18 $arg1 ]
alias rctf		[ votemap 19 $arg1 ]
alias cdm		[ votemap 20 $arg1 ]
alias ctdm		[ votemap 21 $arg1 ]
alias ktf2		[ votemap 22 $arg1 ]
alias tktf2		[ votemap 23 $arg1 ]
alias zombie	[ votemap 24 $arg1 ]
alias zombies	[ votemap 24 $arg1 ]

// Weapon switching/action utilities.
alias cycleburstmode [ if (= $burst 0) [burst 3] [ if (= $burst 3) [burst 1] [burst 0] ] ]
alias primary [ weapon (currentprimary) ]
alias secondary [ weapon 1 ]
alias melee [ weapon 0 ]
alias grenades [ weapon 7 ]

alias altaction [
	// (concatword altaction_ (curweapon))
	zoom 1; onrelease [ zoom 0 ]
]

alias quicknadethrow [
	if (> (magcontent 7) 0) [
		if (!= (curweapon) 7) [grenades]
		attack
	]
	onrelease [ sleep 1 [ if (= (curweapon) 7) [weapon (prevweapon)] ] ]
]

alias oldsens $sensitivity

alias zoom [
	if (= $arg1 1) [
		if (=f $sensitivity (scopesens)) [] [
			alias oldsens $sensitivity
			sensitivity (scopesens)
			setscope  1
		]
	] [
		sensitivity $oldsens
		setscope 0
	]
]

alias delta_game_0 [ if (= $arg1 1) [ shiftweapon 1 ] [ shiftweapon -1 ] ]
alias delta_spect_0 [ changefollowplayer $arg1 ]

// Map editing using the mousewheel...
alias modifier 0
alias domodifier [ alias modifier $arg1; onrelease [ alias modifier 0 ] ]

alias universaldelta [
  if $editing [ alias s "edit" ] [
	if (alive) [ alias s "game" ] [ alias s "spect" ]
  ]
  (concatword delta _ $s _ $modifier)
]
// To utilize the below, you will need to bind "domodifier X" 
// (replace X with the number of the delta_edit) to a key. To 
// use them, simply hold the key that the "domodifier" is bound
// to and then scroll backwards/forwards while looking at the
// floor/ceiling.
alias delta_edit_0 [ editheight $flrceil $arg1 ]				// Move cubes...
alias delta_edit_1 [ if $flrceil [ vdelta $arg1 ] [ vdelta (- 0 $arg1) ] ]	// Change heightfielding...
alias delta_edit_2 [ edittex $flrceil $arg1 ]					// Change floor/ceiling textures...
alias delta_edit_3 [ edittex (+ $flrceil 1) $arg1 ]				// Change wall/upper-wall textures...
alias delta_edit_4 [ equalize $flrceil ]					// Equalize floor/ceiling...
alias delta_edit_5 [ entproperty 0 $arg1 ]					// Changes the first value on entities...
alias delta_edit_6 [ entproperty $editaxis $arg1 ]				// Move map entity...
alias delta_edit_7 [ entproperty 1 $arg1 ]					// Changes the second value on entities...
alias delta_edit_8 [ entproperty 2 $arg1 ]					// Changes the third value on entities...
alias delta_edit_9 [ entproperty 3 $arg1 ]					// Changes the fourth value on entities...

// HUD toggles
alias toggleshowmap [ showmap 1; onrelease [ showmap 0 ] ]

// convenient connecting from the serverbrowser
// sbconnect arg list:
// arg1 IP, arg2 port,
// arg3 1: server full
// arg4 1: password protected
// arg5 1: private mode
// arg6 1: banned, 2: blacklisted 3: both
// arg7 "server description"
//alias sbconnect [ echo connecting to $arg7 ; connect $arg1 $arg2 ]

